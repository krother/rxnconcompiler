Bngl - main class from bngl.
       Connects all functionalities from bngl to create output BNGL file.

Translates rxncon reactions into BNGL string. 
           Creates BNGL objects that mirror the Rxncon objects but are simpler.
           Main object used: BnglOutput - menages all strings production.

@type reactions:      ReactionPool
    @param reactions:     dictionary of ReactionContainer objects.
                          Used to create RulePool (production done by RuleFactory).
    @type molecules:      MoleculePool
    @param molecules:     dictionary of all molecules present in the system.
                          Used to create molecules and species section.
    @type contingencies:  ContingencyPool
    @param contingencies: all contingencise for the system.
                          Used to generate warnings (list states that are not present).


RulePool object is a dictionary that stores all 
    RuleContainer objects for one system.

RuleContainer object is a list that stores all reaction_container informations like name, rid reactions, common contigencies and so on

The RequirementsGenerator object goes through all contingencies 
    using a tree traversal algorithm
    and generates requirements with only x and ! signs. 

    Input: contingency root node
    Deals with !, x, boolean contingencies, ignores K+, K-, 0, ?

BioNetGenOutput object creates all sections for BNGL file.
    Uses rule and molecules generated by BioNetGen.

BnglTranslator clips functions for
    translating objects into strings.

    String order:
    - molecules are sorted alphabetically
    - localisation is first in domain-string
    - then modifcation sites are sorted alphabetically
    (regardles whether these are sites and actual modifications)
    - then binding domains are sorted automatically 
    (regardles bound or not).

    output.get_src()  Returns BNGL source code as a string.


Warnings: 
    required states that ar not produced in the reactions
    the same side should be phosphorilated twice
    somthing is wrong with a contingency that it can not be applied on the reaction